// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorldOfGamecraft.CharacterService.Infrastructure;

#nullable disable

namespace WorldOfGamecraft.CharacterService.Infrastructure.Migrations
{
    [DbContext(typeof(CharactersDbContext))]
    [Migration("20240409175507_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.CharacterClasses.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_classes");

                    b.ToTable("classes", (string)null);
                });

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.Characters.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("BaseAgility")
                        .HasColumnType("integer")
                        .HasColumnName("base_agility");

                    b.Property<int>("BaseFaith")
                        .HasColumnType("integer")
                        .HasColumnName("base_faith");

                    b.Property<int>("BaseIntelligence")
                        .HasColumnType("integer")
                        .HasColumnName("base_intelligence");

                    b.Property<int>("BaseStrength")
                        .HasColumnType("integer")
                        .HasColumnName("base_strength");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uuid")
                        .HasColumnName("class_id");

                    b.Property<int>("Health")
                        .HasColumnType("integer")
                        .HasColumnName("health");

                    b.Property<int>("Mana")
                        .HasColumnType("integer")
                        .HasColumnName("mana");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_characters");

                    b.HasIndex("ClassId")
                        .HasDatabaseName("ix_characters_class_id");

                    b.ToTable("characters", (string)null);
                });

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("BonusAgility")
                        .HasColumnType("integer")
                        .HasColumnName("bonus_agility");

                    b.Property<int>("BonusFaith")
                        .HasColumnType("integer")
                        .HasColumnName("bonus_faith");

                    b.Property<int>("BonusIntelligence")
                        .HasColumnType("integer")
                        .HasColumnName("bonus_intelligence");

                    b.Property<int>("BonusStrength")
                        .HasColumnType("integer")
                        .HasColumnName("bonus_strength");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("uuid")
                        .HasColumnName("character_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("CharacterId")
                        .HasDatabaseName("ix_items_character_id");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.Characters.Character", b =>
                {
                    b.HasOne("WorldOfGamecraft.CharacterService.Domain.CharacterClasses.Class", "Class")
                        .WithMany("Characters")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_classes_class_id");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.Items.Item", b =>
                {
                    b.HasOne("WorldOfGamecraft.CharacterService.Domain.Characters.Character", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("fk_items_characters_character_id");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.CharacterClasses.Class", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("WorldOfGamecraft.CharacterService.Domain.Characters.Character", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
